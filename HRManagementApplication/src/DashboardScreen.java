
import java.awt.Color;
import java.awt.Image;
import java.awt.Point;
import java.awt.TextField;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.awt.image.ImageFilter;
import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.util.AbstractList;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collection;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.border.LineBorder;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
//TODO
//Calculate Age
//Show Age
/**
 *
 * @author ameyg
 */
public class DashboardScreen extends javax.swing.JFrame {

    private LoginScreen loginScreen;
    private int EMPLOYEE_INDEX;
    private static String userImagePath;
    private File userImageFile;

    /**
     * Creates new form DashboardScreen
     */
    public DashboardScreen() {
        initComponents();
        initAddEmployeeScreen();
        initLists();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        label1 = new java.awt.Label();
        addEmployeeButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        logoutButton = new javax.swing.JButton();
        viewAllButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        addEmployeePanel = new javax.swing.JLayeredPane();
        jLabel9 = new javax.swing.JLabel();
        positionTextField = new javax.swing.JTextField();
        yearlySalaryTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        experienceFormattedTextField = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        birthDateFormattedTextField = new javax.swing.JFormattedTextField();
        levelComboBox = new javax.swing.JComboBox<>();
        emailTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        employeeIDTextField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        userpicLabel = new javax.swing.JLabel();
        selectImageButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        clearAllButton = new javax.swing.JButton();
        deleteImageButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        genderComboBox = new javax.swing.JComboBox<>();
        firstNameTextField = new javax.swing.JTextField();
        middleNameTextField = new javax.swing.JTextField();
        lastNameTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ageLabel = new javax.swing.JLabel();
        teamComboBox = new javax.swing.JComboBox<>();
        startDateFormattedTextField = new javax.swing.JFormattedTextField();
        phoneFormattedTextField = new javax.swing.JFormattedTextField();
        showEmployeeDetailsButtonsLayeredPane = new javax.swing.JLayeredPane();
        deleteButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        searchEmployeePanel = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        searchByemployeeIDTextField = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        searchByNameTextField = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        searchByPhoneTextField = new javax.swing.JTextField();
        searchPanelResetButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchEmployeesTable = new javax.swing.JTable();
        searchPanelButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        viewAllEmployeePanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        viewAllEmployeesTable = new javax.swing.JTable();

        jDialog1.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(0, 0));
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setPreferredSize(new java.awt.Dimension(1280, 720));
        setResizable(false);

        label1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        label1.setText("TechnoClever HR Management System");

        addEmployeeButton.setBackground(new java.awt.Color(0, 102, 51));
        addEmployeeButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        addEmployeeButton.setForeground(new java.awt.Color(255, 255, 255));
        addEmployeeButton.setText("ADD EMPLOYEE");
        addEmployeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEmployeeButtonActionPerformed(evt);
            }
        });

        searchButton.setBackground(new java.awt.Color(0, 102, 51));
        searchButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        searchButton.setForeground(new java.awt.Color(255, 255, 255));
        searchButton.setText("SEARCH");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        logoutButton.setBackground(new java.awt.Color(0, 102, 51));
        logoutButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        logoutButton.setForeground(new java.awt.Color(255, 255, 255));
        logoutButton.setText("LOGOUT");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        viewAllButton.setBackground(new java.awt.Color(0, 102, 51));
        viewAllButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        viewAllButton.setForeground(new java.awt.Color(255, 255, 255));
        viewAllButton.setText("VIEW ALL");
        viewAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAllButtonActionPerformed(evt);
            }
        });

        exitButton.setBackground(new java.awt.Color(0, 102, 51));
        exitButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        exitButton.setForeground(new java.awt.Color(255, 255, 255));
        exitButton.setText("EXIT");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        addEmployeePanel.setMinimumSize(new java.awt.Dimension(1050, 350));
        addEmployeePanel.setRequestFocusEnabled(false);

        jLabel9.setText("Level");

        positionTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        positionTextField.setText("Founder");
        positionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                positionTextFieldActionPerformed(evt);
            }
        });

        yearlySalaryTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        yearlySalaryTextField.setText("NA");
        yearlySalaryTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearlySalaryTextFieldActionPerformed(evt);
            }
        });

        jLabel10.setText("Position Title");

        experienceFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));
        experienceFormattedTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        experienceFormattedTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                experienceFormattedTextFieldActionPerformed(evt);
            }
        });

        jLabel11.setText("Team");

        jLabel12.setText("Yearly Salary");

        birthDateFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        birthDateFormattedTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        birthDateFormattedTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                birthDateFormattedTextFieldActionPerformed(evt);
            }
        });

        levelComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        levelComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Level 1", "Level 2", "Level 3", "Level 4" }));
        levelComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                levelComboBoxActionPerformed(evt);
            }
        });

        emailTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        emailTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailTextFieldActionPerformed(evt);
            }
        });

        jLabel13.setText("Phone (1234567890)");

        jLabel4.setText("Birth Date (Sep 30, 1994)");

        jLabel14.setText("Email Address");

        jLabel5.setText("Age");

        jLabel15.setText("Experience (in years)");

        employeeIDTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        employeeIDTextField.setToolTipText("");
        employeeIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeIDTextFieldActionPerformed(evt);
            }
        });

        jPanel1.setMaximumSize(new java.awt.Dimension(150, 150));
        jPanel1.setMinimumSize(new java.awt.Dimension(150, 150));
        jPanel1.setPreferredSize(new java.awt.Dimension(150, 150));

        userpicLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/employee_pics/user_avatar.png"))); // NOI18N

        selectImageButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        selectImageButton.setText("Select Image");
        selectImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectImageButtonActionPerformed(evt);
            }
        });

        saveButton.setBackground(new java.awt.Color(0, 102, 51));
        saveButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 255, 255));
        saveButton.setText("ADD");
        saveButton.setPreferredSize(new java.awt.Dimension(74, 50));
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        clearAllButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        clearAllButton.setText("CLEAR ALL");
        clearAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearAllButtonActionPerformed(evt);
            }
        });

        deleteImageButton.setText("X");
        deleteImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteImageButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(userpicLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(deleteImageButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectImageButton, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(clearAllButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(clearAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(userpicLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectImageButton)
                    .addComponent(deleteImageButton))
                .addGap(18, 18, 18)
                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel6.setText("Employee ID");

        jLabel7.setText("Start Date (Sep 30, 2022)");

        jLabel8.setText("Gender");

        genderComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        genderComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Transgender", "Genderqueer", "Agender", "Genderless", "Non-binary", "Cis Man", "Cis Woman", "Trans Man", "Trans Woman", "Third Gender", "Two-Spirit", "Bigender", "Genderfluid", "Other" }));
        genderComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderComboBoxActionPerformed(evt);
            }
        });

        firstNameTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        firstNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameTextFieldActionPerformed(evt);
            }
        });

        middleNameTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        middleNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                middleNameTextFieldActionPerformed(evt);
            }
        });

        lastNameTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lastNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastNameTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("First Name");

        jLabel2.setText("Middle Name");

        jLabel3.setText("Last Name");

        ageLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ageLabel.setText("-");

        teamComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        teamComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Backend", "Frontend", "Android", "Content", "Management", "Testing" }));
        teamComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teamComboBoxActionPerformed(evt);
            }
        });

        startDateFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        startDateFormattedTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        startDateFormattedTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startDateFormattedTextFieldActionPerformed(evt);
            }
        });

        phoneFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#########0"))));
        phoneFormattedTextField.setToolTipText("");
        phoneFormattedTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        phoneFormattedTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneFormattedTextFieldActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(0, 102, 51));
        deleteButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("DELETE");
        deleteButton.setMaximumSize(new java.awt.Dimension(164, 32));
        deleteButton.setMinimumSize(new java.awt.Dimension(164, 32));
        deleteButton.setPreferredSize(new java.awt.Dimension(164, 32));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        updateButton.setBackground(new java.awt.Color(0, 102, 51));
        updateButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        updateButton.setForeground(new java.awt.Color(255, 255, 255));
        updateButton.setText("UPDATE");
        updateButton.setMaximumSize(new java.awt.Dimension(164, 32));
        updateButton.setMinimumSize(new java.awt.Dimension(164, 32));
        updateButton.setPreferredSize(new java.awt.Dimension(164, 32));
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        showEmployeeDetailsButtonsLayeredPane.setLayer(deleteButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        showEmployeeDetailsButtonsLayeredPane.setLayer(updateButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout showEmployeeDetailsButtonsLayeredPaneLayout = new javax.swing.GroupLayout(showEmployeeDetailsButtonsLayeredPane);
        showEmployeeDetailsButtonsLayeredPane.setLayout(showEmployeeDetailsButtonsLayeredPaneLayout);
        showEmployeeDetailsButtonsLayeredPaneLayout.setHorizontalGroup(
            showEmployeeDetailsButtonsLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, Short.MAX_VALUE)
            .addComponent(updateButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        showEmployeeDetailsButtonsLayeredPaneLayout.setVerticalGroup(
            showEmployeeDetailsButtonsLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showEmployeeDetailsButtonsLayeredPaneLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(263, Short.MAX_VALUE))
        );

        addEmployeePanel.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(positionTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(yearlySalaryTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(jLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(experienceFormattedTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(birthDateFormattedTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(levelComboBox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(emailTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(jLabel13, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(jLabel14, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(jLabel15, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(employeeIDTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(genderComboBox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(firstNameTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(middleNameTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(lastNameTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(ageLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(teamComboBox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(startDateFormattedTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(phoneFormattedTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addEmployeePanel.setLayer(showEmployeeDetailsButtonsLayeredPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout addEmployeePanelLayout = new javax.swing.GroupLayout(addEmployeePanel);
        addEmployeePanel.setLayout(addEmployeePanelLayout);
        addEmployeePanelLayout.setHorizontalGroup(
            addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addEmployeePanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13)
                    .addComponent(jLabel1)
                    .addComponent(jLabel10)
                    .addComponent(jLabel8)
                    .addComponent(jLabel6)
                    .addComponent(employeeIDTextField)
                    .addComponent(genderComboBox, 0, 144, Short.MAX_VALUE)
                    .addComponent(positionTextField)
                    .addComponent(firstNameTextField)
                    .addComponent(phoneFormattedTextField))
                .addGap(50, 50, 50)
                .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(middleNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel7)
                    .addComponent(startDateFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(teamComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(birthDateFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(50, 50, 50)
                .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lastNameTextField)
                        .addComponent(jLabel12)
                        .addComponent(levelComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(yearlySalaryTextField)
                        .addComponent(jLabel15)
                        .addComponent(experienceFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5)
                    .addComponent(ageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(showEmployeeDetailsButtonsLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        addEmployeePanelLayout.setVerticalGroup(
            addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addEmployeePanelLayout.createSequentialGroup()
                .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addEmployeePanelLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(showEmployeeDetailsButtonsLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addEmployeePanelLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(addEmployeePanelLayout.createSequentialGroup()
                                .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(middleNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(8, 8, 8)
                                .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(employeeIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(birthDateFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel9)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(genderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(startDateFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(levelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(positionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(teamComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(yearlySalaryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(phoneFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(experienceFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(649, Short.MAX_VALUE))
        );

        jLabel6.getAccessibleContext().setAccessibleName("");
        jLabel6.getAccessibleContext().setAccessibleDescription("");

        searchEmployeePanel.setMinimumSize(new java.awt.Dimension(1050, 350));
        searchEmployeePanel.setPreferredSize(new java.awt.Dimension(1050, 350));

        jLabel17.setText("Search by Employee ID");

        searchByemployeeIDTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        searchByemployeeIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByemployeeIDTextFieldActionPerformed(evt);
            }
        });

        jLabel18.setText("Search by Name");

        searchByNameTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        searchByNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByNameTextFieldActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel19.setText("OR");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel20.setText("OR");

        jLabel21.setText("Search by Phone");

        searchByPhoneTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        searchByPhoneTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByPhoneTextFieldActionPerformed(evt);
            }
        });

        searchPanelResetButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        searchPanelResetButton.setText("RESET");
        searchPanelResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPanelResetButtonActionPerformed(evt);
            }
        });

        jSeparator2.setBackground(new java.awt.Color(0, 0, 255));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 204));

        searchEmployeesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "ID", "Name", "Age", "Gender", "Position", "Team", "Phone", "Email", "Experience"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        searchEmployeesTable.setMinimumSize(new java.awt.Dimension(1024, 370));
        searchEmployeesTable.setPreferredSize(new java.awt.Dimension(1024, 370));
        jScrollPane1.setViewportView(searchEmployeesTable);

        searchPanelButton1.setBackground(new java.awt.Color(0, 102, 51));
        searchPanelButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        searchPanelButton1.setForeground(new java.awt.Color(255, 255, 255));
        searchPanelButton1.setText("SEARCH");
        searchPanelButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPanelButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchEmployeePanelLayout = new javax.swing.GroupLayout(searchEmployeePanel);
        searchEmployeePanel.setLayout(searchEmployeePanelLayout);
        searchEmployeePanelLayout.setHorizontalGroup(
            searchEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchEmployeePanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(searchEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchEmployeePanelLayout.createSequentialGroup()
                        .addGroup(searchEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(searchEmployeePanelLayout.createSequentialGroup()
                                .addComponent(searchByemployeeIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel19))
                            .addComponent(jLabel17))
                        .addGap(30, 30, 30)
                        .addGroup(searchEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchByNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addGap(30, 30, 30)
                        .addComponent(jLabel20)
                        .addGap(30, 30, 30)
                        .addGroup(searchEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchByPhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21))
                        .addGap(30, 30, 30)
                        .addComponent(searchPanelButton1)
                        .addGap(30, 30, 30)
                        .addComponent(searchPanelResetButton))
                    .addComponent(jScrollPane1)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(142, Short.MAX_VALUE))
        );
        searchEmployeePanelLayout.setVerticalGroup(
            searchEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchEmployeePanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(searchEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel20)
                    .addGroup(searchEmployeePanelLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchByNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(searchEmployeePanelLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(searchEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchByemployeeIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)))
                    .addGroup(searchEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchEmployeePanelLayout.createSequentialGroup()
                            .addComponent(jLabel21)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(searchByPhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(searchPanelButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchPanelResetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSeparator1.setBackground(new java.awt.Color(0, 0, 255));
        jSeparator1.setForeground(new java.awt.Color(51, 0, 255));

        viewAllEmployeePanel.setMinimumSize(new java.awt.Dimension(1050, 350));

        viewAllEmployeesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "ID", "Name", "Age", "Gender", "Position", "Team", "Phone", "Email", "Experience"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        viewAllEmployeesTable.setMinimumSize(new java.awt.Dimension(1024, 370));
        viewAllEmployeesTable.setPreferredSize(new java.awt.Dimension(1024, 370));
        jScrollPane3.setViewportView(viewAllEmployeesTable);

        javax.swing.GroupLayout viewAllEmployeePanelLayout = new javax.swing.GroupLayout(viewAllEmployeePanel);
        viewAllEmployeePanel.setLayout(viewAllEmployeePanelLayout);
        viewAllEmployeePanelLayout.setHorizontalGroup(
            viewAllEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewAllEmployeePanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 944, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        viewAllEmployeePanelLayout.setVerticalGroup(
            viewAllEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewAllEmployeePanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addEmployeeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(logoutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(viewAllButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(exitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(viewAllEmployeePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100)
                        .addComponent(searchEmployeePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addEmployeePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jSeparator1)
                        .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(124, 124, 124)
                                .addComponent(viewAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addEmployeeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(searchEmployeePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1083, Short.MAX_VALUE)
                                    .addComponent(addEmployeePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(viewAllEmployeePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        initSearchEmployeeScreen();

    }//GEN-LAST:event_searchButtonActionPerformed

    private void viewAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAllButtonActionPerformed
        // TODO add your handling code here:
        initViewAllEmployeeScreen();
        
    }//GEN-LAST:event_viewAllButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        dispose();
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void teamComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teamComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teamComboBoxActionPerformed

    private void lastNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastNameTextFieldActionPerformed

    private void middleNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_middleNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_middleNameTextFieldActionPerformed

    private void firstNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameTextFieldActionPerformed

    private void genderComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderComboBoxActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        if (checkFieldsValidation()) {
            updateEmployeeDetails(EMPLOYEE_INDEX, firstNameString, middleNameString, lastNameString, employeeIdString,
                    birthdateToConvertString, ageString, genderString, startDateString, levelString,
                    positionString, teamString, yearlySalaryString, phoneString, emailAddressString,
                    experienceString, userImageFile);
        clearAllAddEmployeeScreen();
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void selectImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectImageButtonActionPerformed
        // TODO add your handling code here:
        addEmployeePanel.setVisible(true);
        JFileChooser chooser = new JFileChooser();
        FileFilter imageFilter = new FileNameExtensionFilter(
                "Image files", ImageIO.getReaderFileSuffixes());
        chooser.addChoosableFileFilter(imageFilter);
        chooser.setAcceptAllFileFilterUsed(false);

        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {

            userImagePath = chooser.getSelectedFile().getAbsolutePath();
            setImageToUserPicLabel(chooser.getSelectedFile());

        }
    }//GEN-LAST:event_selectImageButtonActionPerformed

    private void setImageToUserPicLabel(File imagefile)
    {
                BufferedImage img = null;
            try {
                img = ImageIO.read(imagefile);
                Image dimg = img.getScaledInstance(userpicLabel.getWidth(), userpicLabel.getHeight(),
                        Image.SCALE_SMOOTH);
                ImageIcon imageIcon = new ImageIcon(dimg);
                userpicLabel.setIcon(imageIcon);
                userImageFile = imagefile;
                deleteImageButton.setVisible(true);
            } catch (IOException e) {
                userpicLabel.setForeground(Color.red);
                userpicLabel.setText("Unsupported image. Select another image closer to 100px X 100px.");
                deleteImageButton.setVisible(false);
            }
    }
    
    private void employeeIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeIDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_employeeIDTextFieldActionPerformed

    private void emailTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailTextFieldActionPerformed

    private void levelComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_levelComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_levelComboBoxActionPerformed

    private void birthDateFormattedTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_birthDateFormattedTextFieldActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_birthDateFormattedTextFieldActionPerformed

    private void clearAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearAllButtonActionPerformed
        // TODO add your handling code here:
        clearAllAddEmployeeScreen();
    }//GEN-LAST:event_clearAllButtonActionPerformed

    private void positionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_positionTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_positionTextFieldActionPerformed

    private void experienceFormattedTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_experienceFormattedTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_experienceFormattedTextFieldActionPerformed

    private void startDateFormattedTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startDateFormattedTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startDateFormattedTextFieldActionPerformed

    private void phoneFormattedTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneFormattedTextFieldActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_phoneFormattedTextFieldActionPerformed

    private void searchPanelResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPanelResetButtonActionPerformed

        // TODO add your handling code here:
        resetSearchPaneFields();
    }//GEN-LAST:event_searchPanelResetButtonActionPerformed

    private void searchByPhoneTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByPhoneTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchByPhoneTextFieldActionPerformed

    private void searchByNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchByNameTextFieldActionPerformed

    private void searchByemployeeIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByemployeeIDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchByemployeeIDTextFieldActionPerformed

    private void addEmployeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEmployeeButtonActionPerformed
        // TODO add your handling code here:
        initAddEmployeeScreen();
    }//GEN-LAST:event_addEmployeeButtonActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        // TODO add your handling code here:
        dispose();
        loginScreen = new LoginScreen();
        loginScreen.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void searchPanelButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPanelButton1ActionPerformed
        // TODO add your handling code here:
        JTextField fieldToSearch;

        if (searchByemployeeIDTextField.isEnabled()) {
            searchEmployees(searchByemployeeIDTextField.getText().trim(), 0);
        } else if (searchByNameTextField.isEnabled()) {
            searchEmployees(searchByNameTextField.getText().trim(), 1);
        } else if (searchByPhoneTextField.isEnabled()) {
            searchEmployees(searchByPhoneTextField.getText().trim(), 6);
        }

    }//GEN-LAST:event_searchPanelButton1ActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        if (checkFieldsValidation()) {
            saveEmployeeDetails(firstNameString, middleNameString, lastNameString, employeeIdString,
                    birthdateToConvertString, ageString, genderString, startDateString, levelString,
                    positionString, teamString, yearlySalaryString, phoneString, emailAddressString,
                    experienceString, userImageFile);
        clearAllAddEmployeeScreen();
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        deleteEmployeeDetails(EMPLOYEE_INDEX);
        clearAllAddEmployeeScreen();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void deleteImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteImageButtonActionPerformed
        // TODO add your handling code here:
        userpicLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/employee_pics/user_avatar.png")));
        userImageFile = null;
        deleteImageButton.setVisible(false);
    }//GEN-LAST:event_deleteImageButtonActionPerformed

    private void yearlySalaryTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearlySalaryTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearlySalaryTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DashboardScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DashboardScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DashboardScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DashboardScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DashboardScreen().setVisible(true);
            }
        });
    }

    public boolean isDateValid(String dateToBeConverted)
    {
         SimpleDateFormat oldDateFormat = new SimpleDateFormat("MMM d, y");
           try {
            oldDateFormat.parse(dateToBeConverted);
            return true;
            }
         catch (ParseException exception) {
            return false;
    }
        }

    
    public int calculateAge(String fromDateString) {
        SimpleDateFormat oldDateFormat = new SimpleDateFormat("MMM d, y");
        try {
            Date myDate = oldDateFormat.parse(fromDateString);
            SimpleDateFormat dateFormat2 = new SimpleDateFormat("MM/dd/yyyy");
            Calendar calendar = new GregorianCalendar();
            calendar.setTime(myDate);
            int year = calendar.get(Calendar.YEAR);
            //Add one to month {0 - 11}
            int month = calendar.get(Calendar.MONTH) + 1;
            int day = calendar.get(Calendar.DAY_OF_MONTH);
            int differenceInYears = LocalDate.now().minus(Period.of(year, month, day)).getYear();
            if (differenceInYears >= 16) {
                return LocalDate.now().minus(Period.of(year, month, day)).getYear();
            } else {
                return 0;
            }
        } catch (ParseException exception) {
            System.out.println("Date " + exception.getLocalizedMessage());
        }
        return 0;
    }

    public static void saveEmployeeDetails(String firstNameSetString, String middleNameSetString, String lastNameSetString,
            String employeeIdString, String birthDateString, String ageString, String genderString, String startDateString,
            String levelString, String positionString, String teamString, String salaryString, String phoneString,
            String emailString, String experienceString, File userImageFile) {
        employeeModel = new EmployeeModel();
        employeeModel.setFirstNameModel(firstNameSetString);
        employeeModel.setMiddleNameModel(middleNameSetString);
        employeeModel.setLastNameModel(lastNameSetString);
        employeeModel.setFullNameModel(firstNameSetString + " " + middleNameSetString + " " + lastNameSetString);
        employeeModel.setEmployeeIDModel(employeeIdString);
        employeeModel.setBirthDateModel(birthDateString);
        employeeModel.setAgeModel(ageString);
        employeeModel.setGenderModel(genderString);
        employeeModel.setStartDateModel(startDateString);
        employeeModel.setLevelModel(levelString);
        employeeModel.setPositionModel(positionString);
        employeeModel.setTeamModel(teamString);
        employeeModel.setSalaryModel(salaryString);
        employeeModel.setPhoneModel(phoneString);
        employeeModel.setEmailModel(emailString);
        employeeModel.setExperienceModel(experienceString);
        employeeModel.setuserimageFile(userImageFile);
        employeeModel.setuserimagePath(userImageFile.getAbsolutePath());
        employeeModelList.add(employeeModel);
        DataStorageClass.dataStorageEmployeeModelList = employeeModelList;
    }

    private boolean checkFieldsValidation() {
        String errormessageString = "";
        firstNameString = firstNameTextField.getText().trim();
        middleNameString = middleNameTextField.getText().trim();
        lastNameString = lastNameTextField.getText().trim();
        employeeIdString = employeeIDTextField.getText().trim();
        birthdateToConvertString = birthDateFormattedTextField.getText().trim();

        try {
            ageString = String.valueOf(calculateAge(birthdateToConvertString));
            ageLabel.setText(ageString);
        } catch (Exception e) {
            ageLabel.setText("-");
            System.err.println("Exception " + e.getLocalizedMessage());

        }

        genderString = genderComboBox.getSelectedItem().toString().trim();
        startDateString = startDateFormattedTextField.getText().trim();
        levelString = levelComboBox.getSelectedItem().toString().trim();
        positionString = positionTextField.getText().trim();
        teamString = teamComboBox.getSelectedItem().toString().trim();
        yearlySalaryString = yearlySalaryTextField.getText().trim();
        phoneString = phoneFormattedTextField.getText().trim();
        emailAddressString = emailTextField.getText().trim();
        experienceString = experienceFormattedTextField.getText().trim();
        
        emailValidator = new EmailValidator();
        
        if (firstNameString.length() > 50 || firstNameString.length() < 1)
        {
            errormessageString = errormessageString.concat("\nFirst Name should be more than 0 and less than 50 characters");
            firstNameTextField.setBorder(new LineBorder(Color.red,2));
        }
        
        if (middleNameString.length() > 50 || middleNameString.length() < 1)
        {
            errormessageString = errormessageString.concat("\nMiddle Name should be more than 0 and less than 50 characters");
            middleNameTextField.setBorder(new LineBorder(Color.red,2));
        }
        
        if (lastNameString.length() > 50 || lastNameString.length() < 1)
        {
            errormessageString = errormessageString.concat("\nLast Name should be more than 0 and less than 50 characters");
            lastNameTextField.setBorder(new LineBorder(Color.red,2));
        }
        
        if (employeeIdString.length() > 10 || employeeIdString.length() < 1)
        {
            errormessageString = errormessageString.concat("\nEmployee ID should be more than 0 and less than 10 characters");
            employeeIDTextField.setBorder(new LineBorder(Color.red,2));
        }
        
        
        if (!(calculateAge(birthdateToConvertString) != 0))
        {
            errormessageString = errormessageString.concat("\nPlease enter the birth date in given format. Also, you should be minimum 16 years old.");
            birthDateFormattedTextField.setBorder(new LineBorder(Color.red,2));
        }
        
        if (!isDateValid(startDateString))
        {
            errormessageString = errormessageString.concat("\nPlease enter the start date in given format.");
            startDateFormattedTextField.setBorder(new LineBorder(Color.red,2));    
        }
        
        if (positionString.length() > 50 || positionString.length() < 1)
        {
            errormessageString = errormessageString.concat("\nPosition Title should be more than 0 and less than 50 characters");
            positionTextField.setBorder(new LineBorder(Color.red,2));
        }
        
        try{
        if (Integer.parseInt(yearlySalaryString) > 100000000 || Integer.parseInt(yearlySalaryString) < 1)
        {
            errormessageString = errormessageString.concat("\nSalary should be more than 1 and less than 100,000,000. Enter Numbers only.");
            yearlySalaryTextField.setBorder(new LineBorder(Color.red,2));
        }
        }
        catch (Exception e)
        {
            errormessageString = errormessageString.concat("\nSalary should be more than 1 and less than 100,000,000. Enter Numbers only.");
            yearlySalaryTextField.setBorder(new LineBorder(Color.red,2));
        }
        
        try{
            
        if (Long.parseLong(phoneString) > 9999999999L || Long.parseLong(phoneString) < 1000000000L)
        {
            errormessageString = errormessageString.concat("\nPhone number should be of 10 digits. Enter Numbers only.");
            phoneFormattedTextField.setBorder(new LineBorder(Color.red,2));
        }
        }
        catch (Exception e)
        {
            errormessageString = errormessageString.concat("\nPhone number should be of 10 digits. Enter Numbers only.");
            phoneFormattedTextField.setBorder(new LineBorder(Color.red,2));
        }
        
        emailValidator = new EmailValidator();
        if (!emailValidator.validate(emailAddressString))
        {
            errormessageString = errormessageString.concat("\nWrite email address in format: abc@xyz.com");
            emailTextField.setBorder(new LineBorder(Color.red,2));
        }
        
        try{
            
        if (Long.parseLong(experienceString) > Long.parseLong(ageString))
        {
            errormessageString = errormessageString.concat("\nExperience should be less than your age. Enter Numbers only.");
            experienceFormattedTextField.setBorder(new LineBorder(Color.red,2));
        }
        }
        catch (Exception e)
        {
            errormessageString = errormessageString.concat("\nExperience should be less than your age. Enter Numbers only.");
            experienceFormattedTextField.setBorder(new LineBorder(Color.red,2));
        }
        
        if (userImageFile == null)
        {
        errormessageString = errormessageString.concat("\nSelect the image.");
            selectImageButton.setBorder(new LineBorder(Color.red,2));
        }
        
        if (!errormessageString.isEmpty())
        {
        JOptionPane.showMessageDialog(new JFrame(), errormessageString.substring(1), "Check Fields",
        JOptionPane.ERROR_MESSAGE);
        return false;
        }
        else return true;
        
        
        
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addEmployeeButton;
    private javax.swing.JLayeredPane addEmployeePanel;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JFormattedTextField birthDateFormattedTextField;
    private javax.swing.JButton clearAllButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton deleteImageButton;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JTextField employeeIDTextField;
    private javax.swing.JButton exitButton;
    private javax.swing.JFormattedTextField experienceFormattedTextField;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JComboBox<String> genderComboBox;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private java.awt.Label label1;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JComboBox<String> levelComboBox;
    private javax.swing.JButton logoutButton;
    private javax.swing.JTextField middleNameTextField;
    private javax.swing.JFormattedTextField phoneFormattedTextField;
    private javax.swing.JTextField positionTextField;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchByNameTextField;
    private javax.swing.JTextField searchByPhoneTextField;
    private javax.swing.JTextField searchByemployeeIDTextField;
    private javax.swing.JPanel searchEmployeePanel;
    private javax.swing.JTable searchEmployeesTable;
    private javax.swing.JButton searchPanelButton1;
    private javax.swing.JButton searchPanelResetButton;
    private javax.swing.JButton selectImageButton;
    private javax.swing.JLayeredPane showEmployeeDetailsButtonsLayeredPane;
    private javax.swing.JFormattedTextField startDateFormattedTextField;
    private javax.swing.JComboBox<String> teamComboBox;
    private javax.swing.JButton updateButton;
    private javax.swing.JLabel userpicLabel;
    private javax.swing.JButton viewAllButton;
    private javax.swing.JPanel viewAllEmployeePanel;
    private javax.swing.JTable viewAllEmployeesTable;
    private javax.swing.JTextField yearlySalaryTextField;
    // End of variables declaration//GEN-END:variables

    private EmailValidator emailValidator;
    public String firstNameString, middleNameString, lastNameString, fullNameString,
            employeeIdString, birthdateToConvertString, convertedBirthdateString, ageString,
            genderString, startDateString, levelString, positionString, teamString,
            yearlySalaryString, phoneString, emailAddressString, experienceString;
    public int ageint;
    public static EmployeeModel employeeModel;
    public static ArrayList<EmployeeModel> employeeModelList, filteredEmployeeModelList;
    private DefaultTableModel employeeTableModel;
    private DefaultTableModel filteredEmployeeTableModel;
    private String[] columnsStringArray;
    private int employeeArrayListSize;

    private void clearAllAddEmployeeScreen() {
        firstNameTextField.setText("");
        middleNameTextField.setText("");
        lastNameTextField.setText("");
        employeeIDTextField.setText("");
        birthDateFormattedTextField.setText("");
        ageLabel.setText("-");
        genderComboBox.setSelectedIndex(0);
        startDateFormattedTextField.setText("");
        levelComboBox.setSelectedIndex(0);
        positionTextField.setText("");
        teamComboBox.setSelectedIndex(0);
        yearlySalaryTextField.setText("");
        phoneFormattedTextField.setText("");
        emailTextField.setText("");
        experienceFormattedTextField.setText("");
        userpicLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/employee_pics/user_avatar.png")));
        selectImageButton.setText("Select Image");
        
        firstNameTextField.setBorder(new LineBorder(Color.BLACK,2));
        middleNameTextField.setBorder(new LineBorder(Color.BLACK,2));
        lastNameTextField.setBorder(new LineBorder(Color.BLACK,2));
        employeeIDTextField.setBorder(new LineBorder(Color.BLACK,2));
        birthDateFormattedTextField.setBorder(new LineBorder(Color.BLACK,2));
        startDateFormattedTextField.setBorder(new LineBorder(Color.BLACK,2));
        levelComboBox.setSelectedIndex(0);
        positionTextField.setBorder(new LineBorder(Color.BLACK,2));
        teamComboBox.setSelectedIndex(0);
        yearlySalaryTextField.setBorder(new LineBorder(Color.BLACK,2));
        phoneFormattedTextField.setBorder(new LineBorder(Color.BLACK,2));
        emailTextField.setBorder(new LineBorder(Color.BLACK,2));
        experienceFormattedTextField.setBorder(new LineBorder(Color.BLACK,2));
        userpicLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/employee_pics/user_avatar.png")));
        selectImageButton.setBorder(new LineBorder(Color.BLACK,2));
    }

    private void initViewAllEmployeeScreen() {
        searchEmployeePanel.setVisible(false);
        addEmployeePanel.setVisible(false);
        viewAllEmployeePanel.setVisible(true);

        addEmployeeButton.setBackground(new java.awt.Color(0, 102, 51));
        searchButton.setBackground(new java.awt.Color(0, 102, 51));
        viewAllButton.setBackground(Color.GRAY);

        displayAllEmployeesTableData();
    }

    private void initSearchEmployeeScreen() {
        searchEmployeePanel.setVisible(true);
        addEmployeePanel.setVisible(false);
        viewAllEmployeePanel.setVisible(false);

        addEmployeeButton.setBackground(new java.awt.Color(0, 102, 51));
        searchButton.setBackground(Color.GRAY);
        viewAllButton.setBackground(new java.awt.Color(0, 102, 51));

        resetSearchPaneFields();

        searchEmployeesTable.setModel(new DefaultTableModel(columnsStringArray, 0));
        formatTable(searchEmployeesTable, new DefaultTableModel(columnsStringArray, 0), new ArrayList<>());

        searchByemployeeIDTextField.getDocument().addDocumentListener(new DocumentListener() {

            public void changedUpdate(DocumentEvent e) {

                disableOtherTextFields(searchByNameTextField, searchByPhoneTextField);
            }

            public void removeUpdate(DocumentEvent e) {
                disableOtherTextFields(searchByNameTextField, searchByPhoneTextField);
            }

            public void insertUpdate(DocumentEvent e) {
                disableOtherTextFields(searchByNameTextField, searchByPhoneTextField);
            }

        });

        searchByNameTextField.getDocument().addDocumentListener(new DocumentListener() {

            public void changedUpdate(DocumentEvent e) {

                disableOtherTextFields(searchByemployeeIDTextField, searchByPhoneTextField);
            }

            public void removeUpdate(DocumentEvent e) {
                disableOtherTextFields(searchByemployeeIDTextField, searchByPhoneTextField);
            }

            public void insertUpdate(DocumentEvent e) {
                disableOtherTextFields(searchByemployeeIDTextField, searchByPhoneTextField);
            }

        });

        searchByPhoneTextField.getDocument().addDocumentListener(new DocumentListener() {

            public void changedUpdate(DocumentEvent e) {

                disableOtherTextFields(searchByemployeeIDTextField, searchByNameTextField);
            }

            public void removeUpdate(DocumentEvent e) {
                disableOtherTextFields(searchByemployeeIDTextField, searchByNameTextField);
            }

            public void insertUpdate(DocumentEvent e) {
                disableOtherTextFields(searchByemployeeIDTextField, searchByNameTextField);
            }

        });

    }

    public void disableOtherTextFields(JTextField field1, JTextField field2) {
        field1.setEnabled(false);
        field2.setEnabled(false);
    }

    private void initAddEmployeeScreen() {
        columnsStringArray = new String[]{"#", "ID", "Name", "Age", "Gender", "Position", "Team", "Phone", "Email", "Exp"};
        viewAllEmployeesTable.setName("viewAllEmployeesTable");
        searchEmployeesTable.setName("searchEmployeesTable");

                firstNameTextField.setBorder(new LineBorder(Color.BLACK,2));
        middleNameTextField.setBorder(new LineBorder(Color.BLACK,2));
        lastNameTextField.setBorder(new LineBorder(Color.BLACK,2));
        employeeIDTextField.setBorder(new LineBorder(Color.BLACK,2));
        birthDateFormattedTextField.setBorder(new LineBorder(Color.BLACK,2));
        startDateFormattedTextField.setBorder(new LineBorder(Color.BLACK,2));
        levelComboBox.setSelectedIndex(0);
        positionTextField.setBorder(new LineBorder(Color.BLACK,2));
        teamComboBox.setSelectedIndex(0);
        yearlySalaryTextField.setBorder(new LineBorder(Color.BLACK,2));
        phoneFormattedTextField.setBorder(new LineBorder(Color.BLACK,2));
        emailTextField.setBorder(new LineBorder(Color.BLACK,2));
        experienceFormattedTextField.setBorder(new LineBorder(Color.BLACK,2));
        selectImageButton.setBorder(new LineBorder(Color.BLACK,2));

        
        searchEmployeePanel.setVisible(false);
        addEmployeePanel.setVisible(true);
        viewAllEmployeePanel.setVisible(false);
        showEmployeeDetailsButtonsLayeredPane.setVisible(false);
        deleteImageButton.setVisible(false);

        addEmployeeButton.setBackground(Color.GRAY);
        searchButton.setBackground(new java.awt.Color(0, 102, 51));
        viewAllButton.setBackground(new java.awt.Color(0, 102, 51));

        try {
            if (!DataStorageClass.dataStorageEmployeeModelList.isEmpty()) {
                employeeModelList = DataStorageClass.dataStorageEmployeeModelList;
            }
        } catch (Exception e) {
            employeeModelList = new ArrayList<>();
        }

        birthDateFormattedTextField.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                setAgeToLabel();
            }

            public void removeUpdate(DocumentEvent e) {
                setAgeToLabel();
            }

            public void insertUpdate(DocumentEvent e) {
                setAgeToLabel();
            }

            public void setAgeToLabel() {
                ageint = calculateAge(birthDateFormattedTextField.getText().trim());
                if (ageint != 0) {
                    ageLabel.setText(String.valueOf(ageint));
                } else {
                    ageLabel.setText("-");
                }
            }
        });
    }

    private void initLists() {

        employeeModelList = new ArrayList<>();
        DataStorageClass.dataStorageEmployeeModelList = employeeModelList;

    }

    private void displayAllEmployeesTableData() {

//        columnsStringArray = new String[]{"#", "ID", "Name", "Age", "Gender", "Position", "Team", "Phone", "Email", "Exp"};
        employeeArrayListSize = employeeModelList.size();

        if (!employeeModelList.isEmpty()) {
            employeeTableModel = new DefaultTableModel(columnsStringArray, 0);

            for (int i = 0; i < employeeArrayListSize; i++) {
                employeeTableModel.addRow(new String[]{String.valueOf(i + 1), employeeModelList.get(i).getEmployeeIDModel(),
                    employeeModelList.get(i).getFullNameModel(),
                    employeeModelList.get(i).getAgeModel(), employeeModelList.get(i).getGenderModel(),
                    employeeModelList.get(i).getPositionModel(), employeeModelList.get(i).getTeamModel(),
                    employeeModelList.get(i).getPhoneModel(), employeeModelList.get(i).getEmailModel(),
                    employeeModelList.get(i).getExperienceModel()});
            }

            formatTable(viewAllEmployeesTable, employeeTableModel, employeeModelList);

        }
        else {
                employeeTableModel = new DefaultTableModel(columnsStringArray, 0);
                viewAllEmployeesTable.setModel(employeeTableModel);
        employeeTableModel.fireTableDataChanged();}

    }

    public void formatTable(JTable tableToFormat, DefaultTableModel tableModelToSet, ArrayList<EmployeeModel> tableDataArraylist) {
        tableToFormat.setModel(tableModelToSet);
        tableToFormat.getColumnModel().getColumn(0).setPreferredWidth(10);  //#
        tableToFormat.getColumnModel().getColumn(1).setPreferredWidth(30);  //ID
        tableToFormat.getColumnModel().getColumn(2).setPreferredWidth(120);  //Name
        tableToFormat.getColumnModel().getColumn(3).setPreferredWidth(20);  //Age
        tableToFormat.getColumnModel().getColumn(4).setPreferredWidth(30);  //Gender
        tableToFormat.getColumnModel().getColumn(5).setPreferredWidth(100);  //Position
        tableToFormat.getColumnModel().getColumn(6).setPreferredWidth(80);  //Team
        tableToFormat.getColumnModel().getColumn(7).setPreferredWidth(80);  //Phone
        tableToFormat.getColumnModel().getColumn(8).setPreferredWidth(140);  //Email
        tableToFormat.getColumnModel().getColumn(9).setPreferredWidth(10);  //Experience
        if (!tableDataArraylist.isEmpty()){
        tableToFormat.setPreferredSize(null);
        tableToFormat.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        tableModelToSet.fireTableDataChanged();
            if (!searchEmployeePanel.isVisible()){
            tableToFormat.addMouseListener(new MouseAdapter() {
                public void mousePressed(MouseEvent mouseEvent) {
                    JTable table = (JTable) mouseEvent.getSource();
                    Point point = mouseEvent.getPoint();
                    if (mouseEvent.getClickCount() == 2 && table.getSelectedRow() != -1) {

                        EmployeeModel employeeDetailsToShowModel = tableDataArraylist.get(table.getSelectedRow());
                        initShowEmployeeDetails(table.rowAtPoint(point), employeeDetailsToShowModel);
                    }
                }
            });
            }
        }
        else {
            
        tableModelToSet = new DefaultTableModel(columnsStringArray, 0);
        tableModelToSet.fireTableDataChanged();
        }

    }

    private void initShowEmployeeDetails(int rowindex, EmployeeModel employeeModelObject) {
        searchEmployeePanel.setVisible(false);
        addEmployeePanel.setVisible(true);
        viewAllEmployeePanel.setVisible(false);
        showEmployeeDetailsButtonsLayeredPane.setVisible(true);
        userpicLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/employee_pics/user_avatar.png")));
        
        firstNameTextField.setBorder(new LineBorder(Color.BLACK,2));
        middleNameTextField.setBorder(new LineBorder(Color.BLACK,2));
        lastNameTextField.setBorder(new LineBorder(Color.BLACK,2));
        employeeIDTextField.setBorder(new LineBorder(Color.BLACK,2));
        birthDateFormattedTextField.setBorder(new LineBorder(Color.BLACK,2));
        startDateFormattedTextField.setBorder(new LineBorder(Color.BLACK,2));
        levelComboBox.setSelectedIndex(0);
        positionTextField.setBorder(new LineBorder(Color.BLACK,2));
        teamComboBox.setSelectedIndex(0);
        yearlySalaryTextField.setBorder(new LineBorder(Color.BLACK,2));
        phoneFormattedTextField.setBorder(new LineBorder(Color.BLACK,2));
        emailTextField.setBorder(new LineBorder(Color.BLACK,2));
        experienceFormattedTextField.setBorder(new LineBorder(Color.BLACK,2));
        selectImageButton.setBorder(new LineBorder(Color.BLACK,2));

        addEmployeeButton.setBackground(new java.awt.Color(0, 102, 51));
        searchButton.setBackground(new java.awt.Color(0, 102, 51));
        viewAllButton.setBackground(new java.awt.Color(0, 102, 51));

        saveButton.setText("ADD AS NEW");

        firstNameTextField.setText(employeeModelObject.getFirstNameModel());
        middleNameTextField.setText(employeeModelObject.getMiddleNameModel());
        lastNameTextField.setText(employeeModelObject.getLastNameModel());
        employeeIDTextField.setText(employeeModelObject.getEmployeeIDModel());
        birthDateFormattedTextField.setText(employeeModelObject.getBirthDateModel());
        ageLabel.setText(employeeModelObject.getAgeModel());
        genderComboBox.getEditor().setItem(employeeModelObject.getGenderModel());
        startDateFormattedTextField.setText(employeeModelObject.getStartDateModel());
        levelComboBox.getEditor().setItem(employeeModelObject.getLevelModel());
        positionTextField.setText(employeeModelObject.getPositionModel());
        teamComboBox.getEditor().setItem(employeeModelObject.getTeamModel());
        yearlySalaryTextField.setText(employeeModelObject.getSalaryModel());
        phoneFormattedTextField.setText(employeeModelObject.getPhoneModel());
        emailTextField.setText(employeeModelObject.getEmailModel());
        experienceFormattedTextField.setText(employeeModelObject.getExperienceModel());
        setImageToUserPicLabel(employeeModelObject.getuserimageFile());
        
        EMPLOYEE_INDEX = rowindex;

    }

    private void searchEmployees(String queryToSearch, int fieldIndex) {
        filteredEmployeeModelList = new ArrayList<>();
        columnsStringArray = new String[]{"#", "ID", "Name", "Age", "Gender", "Position", "Team", "Phone", "Email", "Exp"};

        filteredEmployeeTableModel = new DefaultTableModel(columnsStringArray, 0);

        switch (fieldIndex) {
            case 0 -> {
                for (int i = 0; i < employeeModelList.size(); i++) {
                    if (employeeModelList.get(i).getEmployeeIDModel().equals(queryToSearch)) {
                        filteredEmployeeTableModel.addRow(new String[]{String.valueOf(i + 1), employeeModelList.get(i).getEmployeeIDModel(),
                            employeeModelList.get(i).getFullNameModel(),
                            employeeModelList.get(i).getAgeModel(), employeeModelList.get(i).getGenderModel(),
                            employeeModelList.get(i).getPositionModel(), employeeModelList.get(i).getTeamModel(),
                            employeeModelList.get(i).getPhoneModel(), employeeModelList.get(i).getEmailModel(),
                            employeeModelList.get(i).getExperienceModel()});

                        filteredEmployeeModelList.add(employeeModelList.get(i));

                    }
                }
                DataStorageClass.dataStorageFilteredEmployeeModelList = filteredEmployeeModelList;
                formatTable(searchEmployeesTable, filteredEmployeeTableModel, filteredEmployeeModelList);
            }
            case 1 -> {
                for (int i = 0; i < employeeModelList.size(); i++) {
                    if (employeeModelList.get(i).getFullNameModel().toLowerCase().contains(queryToSearch.toLowerCase())) {
                        filteredEmployeeTableModel.addRow(new String[]{String.valueOf(i + 1), employeeModelList.get(i).getEmployeeIDModel(),
                            employeeModelList.get(i).getFullNameModel(),
                            employeeModelList.get(i).getAgeModel(), employeeModelList.get(i).getGenderModel(),
                            employeeModelList.get(i).getPositionModel(), employeeModelList.get(i).getTeamModel(),
                            employeeModelList.get(i).getPhoneModel(), employeeModelList.get(i).getEmailModel(),
                            employeeModelList.get(i).getExperienceModel()});

                        filteredEmployeeModelList.add(employeeModelList.get(i));
                    }
                }
                DataStorageClass.dataStorageFilteredEmployeeModelList = filteredEmployeeModelList;
                formatTable(searchEmployeesTable, filteredEmployeeTableModel, filteredEmployeeModelList);
            }
            case 6 -> {
                for (int i = 0; i < employeeModelList.size(); i++) {
                    if (employeeModelList.get(i).getPhoneModel().contains(queryToSearch)) {
                        filteredEmployeeTableModel.addRow(new String[]{String.valueOf(i + 1), employeeModelList.get(i).getEmployeeIDModel(),
                            employeeModelList.get(i).getFullNameModel(),
                            employeeModelList.get(i).getAgeModel(), employeeModelList.get(i).getGenderModel(),
                            employeeModelList.get(i).getPositionModel(), employeeModelList.get(i).getTeamModel(),
                            employeeModelList.get(i).getPhoneModel(), employeeModelList.get(i).getEmailModel(),
                            employeeModelList.get(i).getExperienceModel()});

                        filteredEmployeeModelList.add(employeeModelList.get(i));
                    }
                }
                DataStorageClass.dataStorageFilteredEmployeeModelList = filteredEmployeeModelList;
                formatTable(searchEmployeesTable, filteredEmployeeTableModel, filteredEmployeeModelList);
            }
            default -> {
            }
        }
    }

    public static void updateEmployeeDetails(int listindex, String firstNameSetString, String middleNameSetString, String lastNameSetString,
            String employeeIdString, String birthDateString, String ageString, String genderString, String startDateString,
            String levelString, String positionString, String teamString, String updateSalaryString, String phoneString,
            String emailString, String experienceString, File userImageFileFile) {
        employeeModel = new EmployeeModel();
        employeeModel.setFirstNameModel(firstNameSetString);
        employeeModel.setMiddleNameModel(middleNameSetString);
        employeeModel.setLastNameModel(lastNameSetString);
        employeeModel.setFullNameModel(firstNameSetString + " " + middleNameSetString + " " + lastNameSetString);
        employeeModel.setEmployeeIDModel(employeeIdString);
        employeeModel.setBirthDateModel(birthDateString);
        employeeModel.setAgeModel(ageString);
        employeeModel.setGenderModel(genderString);
        employeeModel.setStartDateModel(startDateString);
        employeeModel.setLevelModel(levelString);
        employeeModel.setPositionModel(positionString);
        employeeModel.setTeamModel(teamString);
        employeeModel.setSalaryModel(updateSalaryString);
        employeeModel.setPhoneModel(phoneString);
        employeeModel.setEmailModel(emailString);
        employeeModel.setExperienceModel(experienceString);
        employeeModel.setuserimageFile(userImageFileFile);
        employeeModel.setuserimagePath(userImageFileFile.getAbsolutePath());
        employeeModelList.set(listindex, employeeModel);
        DataStorageClass.dataStorageEmployeeModelList = employeeModelList;
    }

    private void resetSearchPaneFields() {
        searchByemployeeIDTextField.setText("");
        searchByNameTextField.setText("");
        searchByPhoneTextField.setText("");
        searchByemployeeIDTextField.setEnabled(true);
        searchByNameTextField.setEnabled(true);
        searchByPhoneTextField.setEnabled(true);
    }

    private void deleteEmployeeDetails(int listindex) {
        if (listindex != -1) {
            employeeModelList.remove(listindex);
        }
        listindex = -1;
        EMPLOYEE_INDEX = listindex;
    }

}
